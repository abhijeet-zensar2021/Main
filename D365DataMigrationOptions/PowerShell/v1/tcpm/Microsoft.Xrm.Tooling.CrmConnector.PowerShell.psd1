#
# Module manifest for module 'Microsoft.Xrm.Tooling.CrmConnector.PowerShell'
#
# Generated by: Microsoft Dynamics 365 CRM Team
#
# Generated on: 4/12/2017 2:04:50 PM
#

@{

# Script module or binary module file associated with this manifest.
RootModule = 'Microsoft.Xrm.Tooling.CrmConnector.PowerShell.psm1'

# Version number of this module.
ModuleVersion = '3.3.0.928'

# ID used to uniquely identify this module
GUID = '7982AE8F-1E4B-4333-9DF6-0305DBD4A3DA'

# Author of this module
Author = 'Microsoft Common Data Service Team'

# Company or vendor of this module
CompanyName = 'Microsoft'

# Copyright statement for this module
Copyright = '© 2020 Microsoft Corporation. All rights reserved'

# Description of the functionality provided by this module
Description = 'PowerShell wrapper for CDS CrmServiceClient'

# Minimum version of the Windows PowerShell engine required by this module
PowerShellVersion = '5.1'

# Name of the Windows PowerShell host required by this module
#PowerShellHostName = ''

# Minimum version of the Windows PowerShell host required by this module
#PowerShellHostVersion = ''

# Minimum version of the .NET Framework required by this module
#DotNetFrameworkVersion = '4.0'

# Minimum version of the common language runtime (CLR) required by this module
#CLRVersion = '4.0'

# Processor architecture (None, X86, Amd64) required by this module
#ProcessorArchitecture = ''

# Supported PSEditions: 'Desktop', 'Core'
CompatiblePSEditions = @('Desktop')

# Modules that must be imported into the global environment prior to importing this module
#RequiredModules = 

# Assemblies that must be loaded prior to importing this module
RequiredAssemblies = @(
'Microsoft.Xrm.Tooling.Ui.Styles.dll',
'Newtonsoft.Json.dll',
'Microsoft.Rest.ClientRuntime.dll'
)

# Script files (.ps1) that are run in the caller's environment prior to importing this module.
#ScriptsToProcess = @()

# Type files (.ps1xml) to be loaded when importing this module
#TypesToProcess = @()

# Format files (.ps1xml) to be loaded when importing this module
#FormatsToProcess = @()

# Modules to import as nested modules of the module specified in RootModule/ModuleToProcess
NestedModules = if($PSEdition -eq 'Core')
{
	$null # No Core compatible modules
}
else # Desktop
{
	@(
		'Microsoft.Xrm.Tooling.CrmConnector.PowerShell.dll'
	)
}

# Functions to export from this module
FunctionsToExport = @()

# Cmdlets to export from this module
CmdletsToExport = @(
  'Get-CrmConnection',
  'Get-CrmOrganizations'
)

# Variables to export from this module
VariablesToExport = @(
	)

# Aliases to export from this module
AliasesToExport = @(
	)

# List of all modules packaged with this module.
 ModuleList = @(
	'Microsoft.Xrm.Tooling.CrmConnector.PowerShell'
	)

# List of all files packaged with this module
#FileList = @()

# Private data to pass to the module specified in RootModule/ModuleToProcess. This may also contain a PSData hashtable with additional module metadata used by PowerShell.
PrivateData = @{

    PSData = @{

        # Tags applied to this module. These help with module discovery in online galleries.
        # Tags = @()

        # A URL to the license for this module.
        LicenseUri = 'http://download.microsoft.com/download/E/1/8/E18C0FAD-FEC8-44CD-9A16-98EDC4DAC7A2/LicenseTerms.docx'

        # A URL to the main website for this project.
        ProjectUri = 'https://docs.microsoft.com/powershell/module/microsoft.xrm.tooling.crmconnector.powershell/?view=dynamics365ce-ps'
		        # A URL to an icon representing this module.
        IconUri = 'https://connectoricons-prod.azureedge.net/powerappsforappmakers/icon_1.0.1056.1255.png'

        # ReleaseNotes of this module
        ReleaseNotes = '
Current Release:

3.3.0.928
Added new public property to Read out InMemory Logs in string list format or Tuple(datetime,logevent) format. 
Added new public property for OrganizationDetail Information called "OrganizationDetail" for the currently connected environment.
Added new enum for ImportSolution additional property options called "ImportSolutionProperties" - this contains valid options for additional properties for the ImportSolution handler
Adding Switzerland Geo to Regions List.
Fixed an issue with .Clone not correctly supporting adding telemetry handlers to cloned connections
Fixed an issue with telemetry for the client that was using incorrect format for useragent content

3.3.0.899:
Added initial support for in memory log capture support. 
          
3.3.0.897:
Fixed an issue with sovereign cloud discovery reference data that would prevent a login control from picking the correct global discovery server when connecting.
        
3.3.0.892:
Fixed Authority property data loss post clone process
Fixed an error with connection string based IFD Auth flows that slipped though testing.

3.3.0.891:
Fixed an error where discovery would be used when using AD and IFD to connect to onpremise even if connection strings where used. 

3.3.0.890:
Fixed an error where timeout property was not properly assigned when using Non-oAuth types 
Fixed an error with setting CallerId when ClientSecret Auth type is used.  
	Thanks for all the bug reports on this and repros that really helped us run it down. 

3.3.0.887:
Uptaking new CoreSDK release

3.3.0.886:
Uptaking current CDS SDK. 

3.3.0.885:
Internal fixes to unify the way in which online and onprem instances were determined from the URI provided.
Added new Static Property on Utilities called IsValidOnlineHost, this takes a URL and determines if it a valid OnLine URI for the CDS Service
Corrected an issue where the AdminAPI URL provided by Get-CrmOrganizations was incorrect.
Fixed a bug Null Object Error that would occur occasionaly during connect when many concurrent connects were run.
	This would typically happen if a developer used a Task.Wait behavior to create a stack of connections at once. 
Fixed a bug that would prevent logs from being generated even when verbose tracing was enabled. 

3.3.0.874:
Added Support for new properties in discovery response. 
Added: 
	Tenant Id - ID of the tenant that the instance resides in
	Enviroment Id - ID of the PowerPlatform Envrioment that the instance resides in
	UrlName - Host name for the target instance. 
Fixed a bug where the second ( or third ) connection string attempt in the same process would cause the client to try to reuse the current connection.
Fixed a bug where the SDK Version Property was not properly returning from the CrmServiceClient

3.3.0.869:
	Fixed a bug with how errors are handled when they are raised from ADAL 3.19+.  MFA Force Login will now work properly again. 
    Updated default response sizes to support more verbose error messages from CDS

3.3.0.862
	ADAL 3.19+ is now required for this library.  ADAL 2.x clients will need to be updated to use ADAL 3.x+
	Added Support for Current User ID login when using Online flows with oAuth (Login control/connection string support )
	Added Support for ClientID Secret Auth when using oAuth flows. (connection string support )

3.3.0.857 
Added support for France and New US Geos
	Added new behavior to return the full login error when initial connect fails in LastException. 
	Fixed https activation issue introduced by .net 4.8. - This should no longer require http activation to be enabled on windows. 
	Fixed issue where a long running cloned connection loses its access token.

3.3.0.841 - (Nuget-9.0.2.16):
	Added native support for handing throttling messages from server. 
	Fixed issue where a cloned connections token could time out in a way that was not detected. 
			When failing, this would result in a mid operation Authentication failure reporting something like "Anonymous Access Failed"
	Added Support for China Geo
	Minor changes to logging of Import Solution Activities 

	#### VERSION RESET HERE TO NOW FOLLOW BUILD VERSIONS OF THIS MODULE... 

NOTE: Notes Below are synced to Nuget Release Found here: https://www.nuget.org/packages/Microsoft.CrmSdk.XrmTooling.CrmConnector.PowerShell/
9.0.2.12
	Fixed bug in CrmServiceClient which would cause some OnPrem connections to fail with an error "Item already added to List"
	Minor Perf Improvements
		
9.0.2.11:
	Updated to include Fixed version of CrmServiceClient and login control for new US Geo ( US Gov High )

9.0.2.9: 
	Picked up updated CrmServiceClient (Microsoft.Xrm.Tooling.Connector)

9.0.2.8: 
	Picked up updated CrmServiceClient (Microsoft.Xrm.Tooling.Connector)

9.0.2.7: 
	Picked up updated CrmServiceClient (Microsoft.Xrm.Tooling.Connector)

9.0.2.5: 
	Fixed a bug with using ExecuteCrmWebRequest where SkipDiscovery was also used that would cause the command to fail with a malformed URI error.
	Fix to support SSO login, issue manifested as unable to execute a SSO login on second attempt.
	Fix to make local metadata cache instance aware, 
		Issue manifested in a single client process where more then one connection was made to different CDS instances and the metadata helpers were used.  The Metadata would not be instance specific.
					
	Streamlined .Clone support by removing unneeded WhoAmI validation call.
	Added new .Clone override to allow a developer to pass an assembly reference to the .Clone method to use when establishing strong types for that connection.
	Added additional error log details when a fault is detected
			
		
9.0.2.4:
	Added support for retrying SDK request if the server throws a retriable errors.
	ImportSolutionToCrmAsync – 
		Returns an AsyncOperation ID that must be polled for solution Import completion or failure. 
		Note, Async jobs are subject to Async queuing and overhead, thus use this with caution.
	DeleteAndPromoteSolutionAsync – 
		Returns an AsyncOperation ID that must be polled for completion
		Note: DeleteAndPromote Async support is not generally available to all regions and versions of the platform.  If this is not available the async job with fail immediately.
		Note: Async jobs are subject to Async queuing and overhead, thus use this with caution.

9.0.2.3: 
	Added new dependencies: 
		Json.net version 6.0.0.0
		Microsoft.Rest.ClientRuntime 3.0.0.0
	Added Support for Caller ID using AAD Object ID of caller -
		Added new property on CrmServiceClient: CallerAADObjectId
		Supported for 8.1 and later.
	Added New Method ExecuteCrmWebRequest
		This method supports using the XRM WebAPI directly from the CRMServiceClient.
		Supports only oAuth and Certificate Auth connection types
		Supported for 8.0 and later. 
		Supports Common request types and supports batch execute.
	Added Global Discovery Support for Instance lookup 
		Global discovery is now used for all lookup, both regional and global (Online Region = Dont Know) when OAuth is used, except where special region rules are required.
		Note: Germany and North America 2 are not scanned when Online Region = Dont Know is selected.
	Added SkipDiscovery to all connection string variants.
	Added Certificate support for constructor variants. 
	Fixed issue with allowing discovery selection using onPrem and OAuth.
	Fixed an issue with older On-Prem ADFS instances that do not require a resource URI.

	**Special notes: 
		Added additional telemetry support to connection requests
			This will add the process name of the calling process (if available) to help with troubleshooting and support requests.
		Added request IDs to all requests to help with troubleshooting and support requests.
			These will appear only when verbose logging is enabled. 
                
9.0.0.5: 9.0 Initial Release
9.0.0.3-preview: 
	Initial release.
	To register module, run the RegisterXrmTooling.ps1'

    } # End of PSData hashtable

} # End of PrivateData hashtable

# HelpInfo URI of this module
#HelpInfoURI = ''

# Default prefix for commands exported from this module. Override the default prefix using Import-Module -Prefix.
#DefaultCommandPrefix = ''

}

# SIG # Begin signature block
# MIIjhAYJKoZIhvcNAQcCoIIjdTCCI3ECAQExDzANBglghkgBZQMEAgEFADB5Bgor
# BgEEAYI3AgEEoGswaTA0BgorBgEEAYI3AgEeMCYCAwEAAAQQH8w7YFlLCE63JNLG
# KX7zUQIBAAIBAAIBAAIBAAIBADAxMA0GCWCGSAFlAwQCAQUABCCdPsfG5kfjfiW6
# gbv4d+f9LR1NZWoAzlUHO0saws2CNKCCDYEwggX/MIID56ADAgECAhMzAAAB32vw
# LpKnSrTQAAAAAAHfMA0GCSqGSIb3DQEBCwUAMH4xCzAJBgNVBAYTAlVTMRMwEQYD
# VQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRtb25kMR4wHAYDVQQKExVNaWNy
# b3NvZnQgQ29ycG9yYXRpb24xKDAmBgNVBAMTH01pY3Jvc29mdCBDb2RlIFNpZ25p
# bmcgUENBIDIwMTEwHhcNMjAxMjE1MjEzMTQ1WhcNMjExMjAyMjEzMTQ1WjB0MQsw
# CQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9u
# ZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMR4wHAYDVQQDExVNaWNy
# b3NvZnQgQ29ycG9yYXRpb24wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIB
# AQC2uxlZEACjqfHkuFyoCwfL25ofI9DZWKt4wEj3JBQ48GPt1UsDv834CcoUUPMn
# s/6CtPoaQ4Thy/kbOOg/zJAnrJeiMQqRe2Lsdb/NSI2gXXX9lad1/yPUDOXo4GNw
# PjXq1JZi+HZV91bUr6ZjzePj1g+bepsqd/HC1XScj0fT3aAxLRykJSzExEBmU9eS
# yuOwUuq+CriudQtWGMdJU650v/KmzfM46Y6lo/MCnnpvz3zEL7PMdUdwqj/nYhGG
# 3UVILxX7tAdMbz7LN+6WOIpT1A41rwaoOVnv+8Ua94HwhjZmu1S73yeV7RZZNxoh
# EegJi9YYssXa7UZUUkCCA+KnAgMBAAGjggF+MIIBejAfBgNVHSUEGDAWBgorBgEE
# AYI3TAgBBggrBgEFBQcDAzAdBgNVHQ4EFgQUOPbML8IdkNGtCfMmVPtvI6VZ8+Mw
# UAYDVR0RBEkwR6RFMEMxKTAnBgNVBAsTIE1pY3Jvc29mdCBPcGVyYXRpb25zIFB1
# ZXJ0byBSaWNvMRYwFAYDVQQFEw0yMzAwMTIrNDYzMDA5MB8GA1UdIwQYMBaAFEhu
# ZOVQBdOCqhc3NyK1bajKdQKVMFQGA1UdHwRNMEswSaBHoEWGQ2h0dHA6Ly93d3cu
# bWljcm9zb2Z0LmNvbS9wa2lvcHMvY3JsL01pY0NvZFNpZ1BDQTIwMTFfMjAxMS0w
# Ny0wOC5jcmwwYQYIKwYBBQUHAQEEVTBTMFEGCCsGAQUFBzAChkVodHRwOi8vd3d3
# Lm1pY3Jvc29mdC5jb20vcGtpb3BzL2NlcnRzL01pY0NvZFNpZ1BDQTIwMTFfMjAx
# MS0wNy0wOC5jcnQwDAYDVR0TAQH/BAIwADANBgkqhkiG9w0BAQsFAAOCAgEAnnqH
# tDyYUFaVAkvAK0eqq6nhoL95SZQu3RnpZ7tdQ89QR3++7A+4hrr7V4xxmkB5BObS
# 0YK+MALE02atjwWgPdpYQ68WdLGroJZHkbZdgERG+7tETFl3aKF4KpoSaGOskZXp
# TPnCaMo2PXoAMVMGpsQEQswimZq3IQ3nRQfBlJ0PoMMcN/+Pks8ZTL1BoPYsJpok
# t6cql59q6CypZYIwgyJ892HpttybHKg1ZtQLUlSXccRMlugPgEcNZJagPEgPYni4
# b11snjRAgf0dyQ0zI9aLXqTxWUU5pCIFiPT0b2wsxzRqCtyGqpkGM8P9GazO8eao
# mVItCYBcJSByBx/pS0cSYwBBHAZxJODUqxSXoSGDvmTfqUJXntnWkL4okok1FiCD
# Z4jpyXOQunb6egIXvkgQ7jb2uO26Ow0m8RwleDvhOMrnHsupiOPbozKroSa6paFt
# VSh89abUSooR8QdZciemmoFhcWkEwFg4spzvYNP4nIs193261WyTaRMZoceGun7G
# CT2Rl653uUj+F+g94c63AhzSq4khdL4HlFIP2ePv29smfUnHtGq6yYFDLnT0q/Y+
# Di3jwloF8EWkkHRtSuXlFUbTmwr/lDDgbpZiKhLS7CBTDj32I0L5i532+uHczw82
# oZDmYmYmIUSMbZOgS65h797rj5JJ6OkeEUJoAVwwggd6MIIFYqADAgECAgphDpDS
# AAAAAAADMA0GCSqGSIb3DQEBCwUAMIGIMQswCQYDVQQGEwJVUzETMBEGA1UECBMK
# V2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0
# IENvcnBvcmF0aW9uMTIwMAYDVQQDEylNaWNyb3NvZnQgUm9vdCBDZXJ0aWZpY2F0
# ZSBBdXRob3JpdHkgMjAxMTAeFw0xMTA3MDgyMDU5MDlaFw0yNjA3MDgyMTA5MDla
# MH4xCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdS
# ZWRtb25kMR4wHAYDVQQKExVNaWNyb3NvZnQgQ29ycG9yYXRpb24xKDAmBgNVBAMT
# H01pY3Jvc29mdCBDb2RlIFNpZ25pbmcgUENBIDIwMTEwggIiMA0GCSqGSIb3DQEB
# AQUAA4ICDwAwggIKAoICAQCr8PpyEBwurdhuqoIQTTS68rZYIZ9CGypr6VpQqrgG
# OBoESbp/wwwe3TdrxhLYC/A4wpkGsMg51QEUMULTiQ15ZId+lGAkbK+eSZzpaF7S
# 35tTsgosw6/ZqSuuegmv15ZZymAaBelmdugyUiYSL+erCFDPs0S3XdjELgN1q2jz
# y23zOlyhFvRGuuA4ZKxuZDV4pqBjDy3TQJP4494HDdVceaVJKecNvqATd76UPe/7
# 4ytaEB9NViiienLgEjq3SV7Y7e1DkYPZe7J7hhvZPrGMXeiJT4Qa8qEvWeSQOy2u
# M1jFtz7+MtOzAz2xsq+SOH7SnYAs9U5WkSE1JcM5bmR/U7qcD60ZI4TL9LoDho33
# X/DQUr+MlIe8wCF0JV8YKLbMJyg4JZg5SjbPfLGSrhwjp6lm7GEfauEoSZ1fiOIl
# XdMhSz5SxLVXPyQD8NF6Wy/VI+NwXQ9RRnez+ADhvKwCgl/bwBWzvRvUVUvnOaEP
# 6SNJvBi4RHxF5MHDcnrgcuck379GmcXvwhxX24ON7E1JMKerjt/sW5+v/N2wZuLB
# l4F77dbtS+dJKacTKKanfWeA5opieF+yL4TXV5xcv3coKPHtbcMojyyPQDdPweGF
# RInECUzF1KVDL3SV9274eCBYLBNdYJWaPk8zhNqwiBfenk70lrC8RqBsmNLg1oiM
# CwIDAQABo4IB7TCCAekwEAYJKwYBBAGCNxUBBAMCAQAwHQYDVR0OBBYEFEhuZOVQ
# BdOCqhc3NyK1bajKdQKVMBkGCSsGAQQBgjcUAgQMHgoAUwB1AGIAQwBBMAsGA1Ud
# DwQEAwIBhjAPBgNVHRMBAf8EBTADAQH/MB8GA1UdIwQYMBaAFHItOgIxkEO5FAVO
# 4eqnxzHRI4k0MFoGA1UdHwRTMFEwT6BNoEuGSWh0dHA6Ly9jcmwubWljcm9zb2Z0
# LmNvbS9wa2kvY3JsL3Byb2R1Y3RzL01pY1Jvb0NlckF1dDIwMTFfMjAxMV8wM18y
# Mi5jcmwwXgYIKwYBBQUHAQEEUjBQME4GCCsGAQUFBzAChkJodHRwOi8vd3d3Lm1p
# Y3Jvc29mdC5jb20vcGtpL2NlcnRzL01pY1Jvb0NlckF1dDIwMTFfMjAxMV8wM18y
# Mi5jcnQwgZ8GA1UdIASBlzCBlDCBkQYJKwYBBAGCNy4DMIGDMD8GCCsGAQUFBwIB
# FjNodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vcGtpb3BzL2RvY3MvcHJpbWFyeWNw
# cy5odG0wQAYIKwYBBQUHAgIwNB4yIB0ATABlAGcAYQBsAF8AcABvAGwAaQBjAHkA
# XwBzAHQAYQB0AGUAbQBlAG4AdAAuIB0wDQYJKoZIhvcNAQELBQADggIBAGfyhqWY
# 4FR5Gi7T2HRnIpsLlhHhY5KZQpZ90nkMkMFlXy4sPvjDctFtg/6+P+gKyju/R6mj
# 82nbY78iNaWXXWWEkH2LRlBV2AySfNIaSxzzPEKLUtCw/WvjPgcuKZvmPRul1LUd
# d5Q54ulkyUQ9eHoj8xN9ppB0g430yyYCRirCihC7pKkFDJvtaPpoLpWgKj8qa1hJ
# Yx8JaW5amJbkg/TAj/NGK978O9C9Ne9uJa7lryft0N3zDq+ZKJeYTQ49C/IIidYf
# wzIY4vDFLc5bnrRJOQrGCsLGra7lstnbFYhRRVg4MnEnGn+x9Cf43iw6IGmYslmJ
# aG5vp7d0w0AFBqYBKig+gj8TTWYLwLNN9eGPfxxvFX1Fp3blQCplo8NdUmKGwx1j
# NpeG39rz+PIWoZon4c2ll9DuXWNB41sHnIc+BncG0QaxdR8UvmFhtfDcxhsEvt9B
# xw4o7t5lL+yX9qFcltgA1qFGvVnzl6UJS0gQmYAf0AApxbGbpT9Fdx41xtKiop96
# eiL6SJUfq/tHI4D1nvi/a7dLl+LrdXga7Oo3mXkYS//WsyNodeav+vyL6wuA6mk7
# r/ww7QRMjt/fdW1jkT3RnVZOT7+AVyKheBEyIXrvQQqxP/uozKRdwaGIm1dxVk5I
# RcBCyZt2WwqASGv9eZ/BvW1taslScxMNelDNMYIVWTCCFVUCAQEwgZUwfjELMAkG
# A1UEBhMCVVMxEzARBgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1vbmQx
# HjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjEoMCYGA1UEAxMfTWljcm9z
# b2Z0IENvZGUgU2lnbmluZyBQQ0EgMjAxMQITMwAAAd9r8C6Sp0q00AAAAAAB3zAN
# BglghkgBZQMEAgEFAKCBoDAZBgkqhkiG9w0BCQMxDAYKKwYBBAGCNwIBBDAcBgor
# BgEEAYI3AgELMQ4wDAYKKwYBBAGCNwIBFTAvBgkqhkiG9w0BCQQxIgQgLd5s4kwF
# N6UoX9dzWRnpKfxWf9hgT84AnSXEAdVojpwwNAYKKwYBBAGCNwIBDDEmMCSgEoAQ
# AFQAZQBzAHQAUwBpAGcAbqEOgAxodHRwOi8vdGVzdCAwDQYJKoZIhvcNAQEBBQAE
# ggEAYBE/5MmGmeG0jCrFaq5CdgrM9Fqe1Aw5wMDcOghsvr2QOI2BmCsr03xYIDEg
# OW39DJHtj72da03e+dvxUza/Xg7LxuRFjj8YWjRKVLVQaCJ7LKAM4dlw/99J+yZc
# CkRnurgY9373IWN5lQtNqjTCHBsaS75H/vSwt9K6OlwbfeCViQUSGiB0W0JxMdu+
# 2tVP/6jJWjbXjPTark+SQQsPc1YfhTUxDfo6Pq1gn68NH4fF21O2vKj+roXo7NEI
# vwmOlkJhM1ssIeuaC8/jSr70EkTxo3GKfAGMxgVU+WFKi0DEEyo2CM6k5otOh+4s
# iK2bXS8qYyX3BZy5uoSAaYWcyqGCEvEwghLtBgorBgEEAYI3AwMBMYIS3TCCEtkG
# CSqGSIb3DQEHAqCCEsowghLGAgEDMQ8wDQYJYIZIAWUDBAIBBQAwggFVBgsqhkiG
# 9w0BCRABBKCCAUQEggFAMIIBPAIBAQYKKwYBBAGEWQoDATAxMA0GCWCGSAFlAwQC
# AQUABCChru8EkLRUuFxouwEtPUukjjUy27UViHqdp80ZypV2NAIGYInlLmP3GBMy
# MDIxMDQyOTE5MTAwNi44MDhaMASAAgH0oIHUpIHRMIHOMQswCQYDVQQGEwJVUzET
# MBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UEChMV
# TWljcm9zb2Z0IENvcnBvcmF0aW9uMSkwJwYDVQQLEyBNaWNyb3NvZnQgT3BlcmF0
# aW9ucyBQdWVydG8gUmljbzEmMCQGA1UECxMdVGhhbGVzIFRTUyBFU046RDlERS1F
# MzlBLTQzRkUxJTAjBgNVBAMTHE1pY3Jvc29mdCBUaW1lLVN0YW1wIFNlcnZpY2Wg
# gg5EMIIE9TCCA92gAwIBAgITMwAAAWH1ojNeoCokaQAAAAABYTANBgkqhkiG9w0B
# AQsFADB8MQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UE
# BxMHUmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMSYwJAYD
# VQQDEx1NaWNyb3NvZnQgVGltZS1TdGFtcCBQQ0EgMjAxMDAeFw0yMTAxMTQxOTAy
# MjFaFw0yMjA0MTExOTAyMjFaMIHOMQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2Fz
# aGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENv
# cnBvcmF0aW9uMSkwJwYDVQQLEyBNaWNyb3NvZnQgT3BlcmF0aW9ucyBQdWVydG8g
# UmljbzEmMCQGA1UECxMdVGhhbGVzIFRTUyBFU046RDlERS1FMzlBLTQzRkUxJTAj
# BgNVBAMTHE1pY3Jvc29mdCBUaW1lLVN0YW1wIFNlcnZpY2UwggEiMA0GCSqGSIb3
# DQEBAQUAA4IBDwAwggEKAoIBAQCXiJ2oQa1P/xs06ocVMgAvFF3LelCQpG9sRGSl
# d4I4IJiwIXga8SZO7R/j8NrU3Mmqy0X5ldsaOaAZOaVvznA3P5/03E3kFOiSDeT5
# U3J9AvUZSkOrfTrlP1gMgMRk4yhOBDZ1I17cYjZQ/ytmRjC746UTgSoe07ZFCSum
# RlsP7k0WmzQcUYNd0745Bh1xFBAyfIpmnMPQQnkfS+rp3a99rY+HbjhSBw/JtXrN
# 0jTffGauCAwT9wnG/h0IMaW3hyFJStMus5syJL3ze92ccHxrxb9PzGse/ViWNHA/
# KaAp2RYo3Ilq39Hg9U9v/ux4HsM63cT3UhaHJFEPEKLyAyGJAgMBAAGjggEbMIIB
# FzAdBgNVHQ4EFgQUVh6andYb+9UlY+SwHT3zROz4Sy8wHwYDVR0jBBgwFoAU1WM6
# XIoxkPNDe3xGG8UzaFqFbVUwVgYDVR0fBE8wTTBLoEmgR4ZFaHR0cDovL2NybC5t
# aWNyb3NvZnQuY29tL3BraS9jcmwvcHJvZHVjdHMvTWljVGltU3RhUENBXzIwMTAt
# MDctMDEuY3JsMFoGCCsGAQUFBwEBBE4wTDBKBggrBgEFBQcwAoY+aHR0cDovL3d3
# dy5taWNyb3NvZnQuY29tL3BraS9jZXJ0cy9NaWNUaW1TdGFQQ0FfMjAxMC0wNy0w
# MS5jcnQwDAYDVR0TAQH/BAIwADATBgNVHSUEDDAKBggrBgEFBQcDCDANBgkqhkiG
# 9w0BAQsFAAOCAQEAEEwPW6lQZseU0zIc4/kPM1pD0F4AnEkIqstmGFhdIVq+RhIj
# di7QPhFnbtcvKMrGWruAj+0szPFU0qt9QiyYjst/WeEbxKtpq9BH7Rb5l9gsUO2c
# s65IVjGWmUC5GGx+aGmyBcJ3Vt+J4ffNATmN/ebX5zUv2OjdH/o13aBZ+3yNnON0
# xWLFKiD1ozhyZaDHpLZQ+v7kumZ+MbHv5SLRZvn1jnAdgMclxAd2URHkoPY+/hqB
# JdcU/4iblf0qO05VncMmnELuJb9zAbL8c0SGyoWcKw2KIJqMifq8IEAfJikuPzNU
# g0bSKbWpqExSeek5Og7lF8dSbnU6HpYIxGT2uTCCBnEwggRZoAMCAQICCmEJgSoA
# AAAAAAIwDQYJKoZIhvcNAQELBQAwgYgxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpX
# YXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRtb25kMR4wHAYDVQQKExVNaWNyb3NvZnQg
# Q29ycG9yYXRpb24xMjAwBgNVBAMTKU1pY3Jvc29mdCBSb290IENlcnRpZmljYXRl
# IEF1dGhvcml0eSAyMDEwMB4XDTEwMDcwMTIxMzY1NVoXDTI1MDcwMTIxNDY1NVow
# fDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1Jl
# ZG1vbmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjEmMCQGA1UEAxMd
# TWljcm9zb2Z0IFRpbWUtU3RhbXAgUENBIDIwMTAwggEiMA0GCSqGSIb3DQEBAQUA
# A4IBDwAwggEKAoIBAQCpHQ28dxGKOiDs/BOX9fp/aZRrdFQQ1aUKAIKF++18aEss
# X8XD5WHCdrc+Zitb8BVTJwQxH0EbGpUdzgkTjnxhMFmxMEQP8WCIhFRDDNdNuDgI
# s0Ldk6zWczBXJoKjRQ3Q6vVHgc2/JGAyWGBG8lhHhjKEHnRhZ5FfgVSxz5NMksHE
# pl3RYRNuKMYa+YaAu99h/EbBJx0kZxJyGiGKr0tkiVBisV39dx898Fd1rL2KQk1A
# UdEPnAY+Z3/1ZsADlkR+79BL/W7lmsqxqPJ6Kgox8NpOBpG2iAg16HgcsOmZzTzn
# L0S6p/TcZL2kAcEgCZN4zfy8wMlEXV4WnAEFTyJNAgMBAAGjggHmMIIB4jAQBgkr
# BgEEAYI3FQEEAwIBADAdBgNVHQ4EFgQU1WM6XIoxkPNDe3xGG8UzaFqFbVUwGQYJ
# KwYBBAGCNxQCBAweCgBTAHUAYgBDAEEwCwYDVR0PBAQDAgGGMA8GA1UdEwEB/wQF
# MAMBAf8wHwYDVR0jBBgwFoAU1fZWy4/oolxiaNE9lJBb186aGMQwVgYDVR0fBE8w
# TTBLoEmgR4ZFaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraS9jcmwvcHJvZHVj
# dHMvTWljUm9vQ2VyQXV0XzIwMTAtMDYtMjMuY3JsMFoGCCsGAQUFBwEBBE4wTDBK
# BggrBgEFBQcwAoY+aHR0cDovL3d3dy5taWNyb3NvZnQuY29tL3BraS9jZXJ0cy9N
# aWNSb29DZXJBdXRfMjAxMC0wNi0yMy5jcnQwgaAGA1UdIAEB/wSBlTCBkjCBjwYJ
# KwYBBAGCNy4DMIGBMD0GCCsGAQUFBwIBFjFodHRwOi8vd3d3Lm1pY3Jvc29mdC5j
# b20vUEtJL2RvY3MvQ1BTL2RlZmF1bHQuaHRtMEAGCCsGAQUFBwICMDQeMiAdAEwA
# ZQBnAGEAbABfAFAAbwBsAGkAYwB5AF8AUwB0AGEAdABlAG0AZQBuAHQALiAdMA0G
# CSqGSIb3DQEBCwUAA4ICAQAH5ohRDeLG4Jg/gXEDPZ2joSFvs+umzPUxvs8F4qn+
# +ldtGTCzwsVmyWrf9efweL3HqJ4l4/m87WtUVwgrUYJEEvu5U4zM9GASinbMQEBB
# m9xcF/9c+V4XNZgkVkt070IQyK+/f8Z/8jd9Wj8c8pl5SpFSAK84Dxf1L3mBZdmp
# tWvkx872ynoAb0swRCQiPM/tA6WWj1kpvLb9BOFwnzJKJ/1Vry/+tuWOM7tiX5rb
# V0Dp8c6ZZpCM/2pif93FSguRJuI57BlKcWOdeyFtw5yjojz6f32WapB4pm3S4Zz5
# Hfw42JT0xqUKloakvZ4argRCg7i1gJsiOCC1JeVk7Pf0v35jWSUPei45V3aicaoG
# ig+JFrphpxHLmtgOR5qAxdDNp9DvfYPw4TtxCd9ddJgiCGHasFAeb73x4QDf5zEH
# pJM692VHeOj4qEir995yfmFrb3epgcunCaw5u+zGy9iCtHLNHfS4hQEegPsbiSpU
# ObJb2sgNVZl6h3M7COaYLeqN4DMuEin1wC9UJyH3yKxO2ii4sanblrKnQqLJzxlB
# TeCG+SqaoxFmMNO7dDJL32N79ZmKLxvHIa9Zta7cRDyXUHHXodLFVeNp3lfB0d4w
# wP3M5k37Db9dT+mdHhk4L7zPWAUu7w2gUDXa7wknHNWzfjUeCLraNtvTX4/edIhJ
# EqGCAtIwggI7AgEBMIH8oYHUpIHRMIHOMQswCQYDVQQGEwJVUzETMBEGA1UECBMK
# V2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0
# IENvcnBvcmF0aW9uMSkwJwYDVQQLEyBNaWNyb3NvZnQgT3BlcmF0aW9ucyBQdWVy
# dG8gUmljbzEmMCQGA1UECxMdVGhhbGVzIFRTUyBFU046RDlERS1FMzlBLTQzRkUx
# JTAjBgNVBAMTHE1pY3Jvc29mdCBUaW1lLVN0YW1wIFNlcnZpY2WiIwoBATAHBgUr
# DgMCGgMVABVuUoQMOXpExF7y/+FdbNK2w895oIGDMIGApH4wfDELMAkGA1UEBhMC
# VVMxEzARBgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNV
# BAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjEmMCQGA1UEAxMdTWljcm9zb2Z0IFRp
# bWUtU3RhbXAgUENBIDIwMTAwDQYJKoZIhvcNAQEFBQACBQDkNQxjMCIYDzIwMjEw
# NDI5MTQ0MzQ3WhgPMjAyMTA0MzAxNDQzNDdaMHcwPQYKKwYBBAGEWQoEATEvMC0w
# CgIFAOQ1DGMCAQAwCgIBAAICGaoCAf8wBwIBAAICESEwCgIFAOQ2XeMCAQAwNgYK
# KwYBBAGEWQoEAjEoMCYwDAYKKwYBBAGEWQoDAqAKMAgCAQACAwehIKEKMAgCAQAC
# AwGGoDANBgkqhkiG9w0BAQUFAAOBgQAmrzMlBr8NW6vs2a2w6SIS6TVoJesA4rub
# SG/TsQs1xaCE9i94TjSndKNLqjsfsTYI3PGeBRdAKB3yqo7ebtTUs+9moP6TYhCH
# UiDXeN2nbpgWe/JepoPWb3fNh755RpaPMc8BAE1fmlSSNaZZMOgboPOghbDqpoxm
# 6NtMt8+TQTGCAw0wggMJAgEBMIGTMHwxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpX
# YXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRtb25kMR4wHAYDVQQKExVNaWNyb3NvZnQg
# Q29ycG9yYXRpb24xJjAkBgNVBAMTHU1pY3Jvc29mdCBUaW1lLVN0YW1wIFBDQSAy
# MDEwAhMzAAABYfWiM16gKiRpAAAAAAFhMA0GCWCGSAFlAwQCAQUAoIIBSjAaBgkq
# hkiG9w0BCQMxDQYLKoZIhvcNAQkQAQQwLwYJKoZIhvcNAQkEMSIEIACqeO/lnPe9
# XFRpIubrD22Id9FZFLC/vkUZR5eErC5/MIH6BgsqhkiG9w0BCRACLzGB6jCB5zCB
# 5DCBvQQgYc+Lp+ppEi3f8wPtDeWCwxqeL1v1QbTVv5aZobQJOG8wgZgwgYCkfjB8
# MQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVk
# bW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMSYwJAYDVQQDEx1N
# aWNyb3NvZnQgVGltZS1TdGFtcCBQQ0EgMjAxMAITMwAAAWH1ojNeoCokaQAAAAAB
# YTAiBCCBOhJMhcnzod4/iCpMKSmfbMzavqL07D+VG5+v/mgMJzANBgkqhkiG9w0B
# AQsFAASCAQAoMEGqqLFmonQ+Ik06L1ItTOYVkRt2q0uT61I2YGAQFL3BU3CBpv3E
# gDucoeUKxjCgLLh+YYeY2M4TTtQvVay8/HxSa5z+chf0VegdWi71sm2k1RZDy7ic
# z+6xu70DDLtE/WjrUlUb0nrsOjOXpv5kB3E9/29aGpnxnhsZuzY6fxmvCVZAoBx0
# 1rs1RgysitvH4q0RRVEnr3rPcjhU/+z/jKWT6nQpspgQu+NrK8vyW5psYfZXhJAB
# t7GT0KWZRANjwBXr1LtyuUbbqPgGZlCZNPhYezYAjEgKeGmBEWK6fOGAuZvyPqJU
# pUuUCDq1fMdx9FWreyy9wdKjA/gGUqvp
# SIG # End signature block
